{
	"info": {
		"_postman_id": "fa2bde06-9f35-4b58-9f3a-ec453dc0e9c8",
		"name": "Car rental",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "42417549"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\",pm.response.json().token)\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Login\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"UserTestRegister077\",\r\n   \"tel\":\"088-179-5679\",\r\n    \"email\":\"userTestRegistessr077@gmail.com\",\r\n    \"role\":\"user\",\r\n    \"password\":\"123456\"\r\n\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\",pm.response.json().token)\r",
									"pm.environment.set(\"User_info\",pm.response.json().User_info)\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"GetMe\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"userTestRegister07@gmail.com\",\r\n    \"password\":\"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetMe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Get all cars\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/me",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "LogOut",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", null);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/logout",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Provider",
			"item": [
				{
					"name": "get all providers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/providers",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"providers"
							]
						}
					},
					"response": []
				},
				{
					"name": "get single provider",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/providers/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"providers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create provider",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"address\": \"ราชบุรี\",\r\n    \"tel\": \"084-555-6666\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"openTime\": \"08:00:00\",\r\n    \"closeTime\": \"18.00.00\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/providers",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"providers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Provider",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/providers/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"providers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Provider",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/providers/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"providers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cars",
			"item": [
				{
					"name": "Get all cars",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Count should be more than 0\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.length).to.be.at.least(0);  // Count >= 0\r",
									"    \r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.execution.setNextRequest(\"Create rent1\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/cars",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"cars"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get single car",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/cars/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"cars",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create new car",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\":\"CarPovider3\",\r\n\"vin_plate\":\"KKKKKK\",\r\n\"provider_info\":\"67bf2c29688b47bb155bd663\",\r\n\"capacity\":5,\r\n\"model\":\"JAVA\",\r\n\"pricePerDay\":300\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/cars",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"cars"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a car",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/cars/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"cars",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Single Car",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/cars/67c14a3ce74a1375c5d09c0a",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"cars",
								"67c14a3ce74a1375c5d09c0a"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Rent",
			"item": [
				{
					"name": "Create rent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"const response = pm.response.json();\r",
									"const new_rent_id = response.data._id;\r",
									"\r",
									"pm.globals.set(\"Rent_ID3\",new_rent_id);\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_info\":\"{{User_info}}\",\r\n    \"startDate\":\"2027-10-12\",\r\n    \"endDate\":\"2027-10-12\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/cars/67c127dc3c252ae0fe134a77/rents/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"cars",
								"67c127dc3c252ae0fe134a77",
								"rents",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get all rents",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Count should be less than or equal to 3\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.count).to.be.at.most(3);  \r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rents",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get single rent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ตรวจสอบว่า status code เป็น 200 หรือไม่\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rents/:rent_id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents",
								":rent_id"
							],
							"variable": [
								{
									"key": "rent_id",
									"value": "{{Rent_ID3}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update rent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/rents/:rent_id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents",
								":rent_id"
							],
							"variable": [
								{
									"key": "rent_id",
									"value": "{{Rent_ID3}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Single Rent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rents/:rent_id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents",
								":rent_id"
							],
							"variable": [
								{
									"key": "rent_id",
									"value": "{{Rent_ID1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get rents for car",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/cars/67c127dc3c252ae0fe134a77/rents",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"cars",
								"67c127dc3c252ae0fe134a77",
								"rents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Finish",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rents/finish/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents",
								"finish",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "AuditLog",
			"item": [
				{
					"name": "Get all AuditLogs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auditlogs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auditlogs"
							]
						}
					},
					"response": []
				},
				{
					"name": "get single auditlog",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auditlogs/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auditlogs",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Test",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\",pm.response.json().token)\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validation Check\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    \r",
									"   \r",
									"\r",
									"    let userInfo = jsonData.User_info;\r",
									"    \r",
									"    pm.expect(userInfo).to.have.property(\"name\").that.is.a(\"string\").and.not.empty;\r",
									"    pm.expect(userInfo).to.have.property(\"tel\").that.is.a(\"string\").and.not.empty;\r",
									"    pm.expect(userInfo).to.have.property(\"email\").that.is.a(\"string\").and.not.empty;\r",
									"    pm.expect(userInfo).to.have.property(\"role\", \"user\");\r",
									"    pm.expect(userInfo).to.have.property(\"password\").that.is.a(\"string\").and.not.empty;\r",
									"    pm.expect(userInfo).to.have.property(\"_id\").that.is.a(\"string\").and.not.empty;\r",
									"    pm.expect(userInfo).to.have.property(\"createdAt\").that.is.a(\"string\").and.not.empty;\r",
									"    pm.expect(userInfo).to.have.property(\"__v\").that.is.a(\"number\");\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Register (400)\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"{{$randomFileName}}\",\r\n    \"tel\":\"088-179-5679\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"role\":\"user\",\r\n    \"password\":\"123456\"\r\n\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\",pm.response.json().token)\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 400,must fil all requirement\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Login\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"UserTestRegister15\",\r\n    //\"tel\":\"088-179-5679\",\r\n    \"email\":\"userTestRegister156@gmail.com\",\r\n    \"role\":\"user\",\r\n    \"password\":\"123456\"\r\n\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\",pm.response.json().token)\r",
									"pm.environment.set(\"User_info\", pm.response.json().User_info._id);\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"GetMe\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"userTestRegister07@gmail.com\",\r\n    \"password\":\"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetMe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Get all cars\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/me",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all cars",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Count should be more than 0\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.length).to.be.at.least(0);  // Count >= 0\r",
									"    \r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.execution.setNextRequest(\"Get all providers\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/cars",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"cars"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all providers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Count should be more than 0\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.length).to.be.at.least(0);  // Count >= 0\r",
									"    \r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.execution.setNextRequest(\"Create rent1\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/providers",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"providers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create rent1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"const new_rent_id = response.data._id;\r",
									"\r",
									"pm.globals.set(\"Rent_ID1\",new_rent_id);\r",
									"\r",
									"pm.execution.setNextRequest(\"Create rent2\");\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"function getRandomDate(year) {\r",
									"    const month = Math.floor(Math.random() * 12); \r",
									"    const day = Math.floor(Math.random() * 28) + 1; \r",
									"    return new Date(year, month, day);\r",
									"}\r",
									"\r",
									"\r",
									"let startDate = getRandomDate(2025);\r",
									"\r",
									"\r",
									"let endDate = new Date(startDate);\r",
									"endDate.setDate(startDate.getDate() + Math.floor(Math.random() * 10) + 1);\r",
									"\r",
									"\r",
									"let startDateFormatted = startDate.toISOString().split('T')[0];\r",
									"let endDateFormatted = endDate.toISOString().split('T')[0];\r",
									"\r",
									"\r",
									"pm.environment.set(\"startDate\", startDateFormatted);\r",
									"pm.environment.set(\"endDate\", endDateFormatted);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_info\":\"{{User_info}}\",\r\n    \"startDate\":\"2027-10-10\",\r\n    \"endDate\":\"2027-10-10\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/cars/67c127dc3c252ae0fe134a77/rents/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"cars",
								"67c127dc3c252ae0fe134a77",
								"rents",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create rent2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"const response = pm.response.json();\r",
									"const new_rent_id = response.data._id;\r",
									"\r",
									"pm.globals.set(\"Rent_ID2\",new_rent_id);\r",
									"\r",
									"pm.execution.setNextRequest(\"Create rent3\");\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_info\":\"{{User_info}}\",\r\n    \"startDate\":\"2027-10-11\",\r\n    \"endDate\":\"2027-10-11\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/cars/67c127dc3c252ae0fe134a77/rents/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"cars",
								"67c127dc3c252ae0fe134a77",
								"rents",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create rent3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"const response = pm.response.json();\r",
									"const new_rent_id = response.data._id;\r",
									"\r",
									"pm.globals.set(\"Rent_ID3\",new_rent_id);\r",
									"pm.execution.setNextRequest(\"Create rent4 (400)\");\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_info\":\"{{User_info}}\",\r\n    \"startDate\":\"2027-10-12\",\r\n    \"endDate\":\"2027-10-12\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/cars/67c127dc3c252ae0fe134a77/rents/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"cars",
								"67c127dc3c252ae0fe134a77",
								"rents",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create rent4 (400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400,user can rent max at 3\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"get all rents\");\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_info\":\"{{User_info}}\",\r\n    \"startDate\":\"2027-09-13\",\r\n    \"endDate\":\"2027-09-13\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/cars/67c127dc3c252ae0fe134a77/rents/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"cars",
								"67c127dc3c252ae0fe134a77",
								"rents",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get all rents",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Count should be less than or equal to 3\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.count).to.be.at.most(3);  \r",
									"});\r",
									"\r",
									"\r",
									"pm.execution.setNextRequest(\"Get single rent\");\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rents",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get single rent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ตรวจสอบว่า status code เป็น 200 หรือไม่\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.execution.setNextRequest(\"Get Single Rent(403)\");\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rents/:rent_id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents",
								":rent_id"
							],
							"variable": [
								{
									"key": "rent_id",
									"value": "{{Rent_ID3}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Rent(403)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403, user can only view user's rent\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Update rent\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/rents/67c3e725e1e2bf2a352b943c",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents",
								"67c3e725e1e2bf2a352b943c"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update rent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Update rent(400)\");\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/rents/:rent_id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents",
								":rent_id"
							],
							"variable": [
								{
									"key": "rent_id",
									"value": "{{Rent_ID3}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update rent(400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401,user can only update user's rent\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Delete Single Rent1\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rents/67c3e725e1e2bf2a352b943c",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents",
								"67c3e725e1e2bf2a352b943c"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Single Rent1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Delete Single Rent2\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rents/:rent_id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents",
								":rent_id"
							],
							"variable": [
								{
									"key": "rent_id",
									"value": "{{Rent_ID1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Single Rent2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Delete Single Rent3\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rents/:rent_id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents",
								":rent_id"
							],
							"variable": [
								{
									"key": "rent_id",
									"value": "{{Rent_ID2}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Single Rent3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Delete Single Rent(401)\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rents/:rent_id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents",
								":rent_id"
							],
							"variable": [
								{
									"key": "rent_id",
									"value": "{{Rent_ID3}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Single Rent(401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401,User can delete only User's rent\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"LogOut\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rents/67c3e725e1e2bf2a352b943c",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents",
								"67c3e725e1e2bf2a352b943c"
							]
						}
					},
					"response": []
				},
				{
					"name": "LogOut",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", null);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" pm.execution.setNextRequest(\"Get Me (401)\");\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/logout",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Me (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/me",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"me"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin Test",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\",pm.response.json().token)\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Login\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"tel\":\"088-179-5679\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"role\":\"admin\",\r\n    \"password\":\"123456\"\r\n\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\",pm.response.json().token)\r",
									"pm.environment.set(\"User_info\", pm.response.json().User_info._id);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"GetMe\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"AdminTestRegister02@gmail.com\",\r\n    \"password\":\"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetMe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Get all cars\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/me",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all cars",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Count should be more than 0\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.length).to.be.at.least(0);  // Count >= 0\r",
									"    \r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.execution.setNextRequest(\"Get all providers\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/cars",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"cars"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all providers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Count should be more than 0\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.length).to.be.at.least(0);  // Count >= 0\r",
									"    \r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.execution.setNextRequest(\"Create rent1\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/providers",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"providers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create rent1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"const new_rent_id = response.data._id;\r",
									"\r",
									"pm.globals.set(\"Rent_ID1\",new_rent_id);\r",
									"\r",
									"pm.execution.setNextRequest(\"Create rent2\");\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"function getRandomDate(year) {\r",
									"    const month = Math.floor(Math.random() * 12); \r",
									"    const day = Math.floor(Math.random() * 28) + 1; \r",
									"    return new Date(year, month, day);\r",
									"}\r",
									"\r",
									"\r",
									"let startDate = getRandomDate(2025);\r",
									"\r",
									"\r",
									"let endDate = new Date(startDate);\r",
									"endDate.setDate(startDate.getDate() + Math.floor(Math.random() * 10) + 1);\r",
									"\r",
									"\r",
									"let startDateFormatted = startDate.toISOString().split('T')[0];\r",
									"let endDateFormatted = endDate.toISOString().split('T')[0];\r",
									"\r",
									"\r",
									"pm.environment.set(\"startDate\", startDateFormatted);\r",
									"pm.environment.set(\"endDate\", endDateFormatted);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_info\":\"{{User_info}}\",\r\n    \"startDate\":\"2027-10-10\",\r\n    \"endDate\":\"2027-10-10\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/cars/67c127dc3c252ae0fe134a77/rents/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"cars",
								"67c127dc3c252ae0fe134a77",
								"rents",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create rent2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"const response = pm.response.json();\r",
									"const new_rent_id = response.data._id;\r",
									"\r",
									"pm.globals.set(\"Rent_ID2\",new_rent_id);\r",
									"\r",
									"pm.execution.setNextRequest(\"Create rent3\");\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_info\":\"{{User_info}}\",\r\n    \"startDate\":\"2027-10-11\",\r\n    \"endDate\":\"2027-10-11\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/cars/67c127dc3c252ae0fe134a77/rents/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"cars",
								"67c127dc3c252ae0fe134a77",
								"rents",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create rent3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"const response = pm.response.json();\r",
									"const new_rent_id = response.data._id;\r",
									"\r",
									"pm.globals.set(\"Rent_ID3\",new_rent_id);\r",
									"pm.execution.setNextRequest(\"Create rent4 (201)\");\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_info\":\"{{User_info}}\",\r\n    \"startDate\":\"2027-10-12\",\r\n    \"endDate\":\"2027-10-12\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/cars/67c127dc3c252ae0fe134a77/rents/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"cars",
								"67c127dc3c252ae0fe134a77",
								"rents",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create rent4 (201)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201,Admin can create rent with no limit\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"const response = pm.response.json();\r",
									"const new_rent_id = response.data._id;\r",
									"\r",
									"pm.globals.set(\"Rent_ID4foradmin\",new_rent_id);\r",
									"pm.execution.setNextRequest(\"Create rent5 (201)\");\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_info\":\"{{User_info}}\",\r\n    \"startDate\":\"2029-09-13\",\r\n    \"endDate\":\"2029-09-13\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/cars/67c127dc3c252ae0fe134a77/rents/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"cars",
								"67c127dc3c252ae0fe134a77",
								"rents",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create rent5 (201)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201,Admin can create rent for any user\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"const response = pm.response.json();\r",
									"const new_rent_id = response.data._id;\r",
									"\r",
									"pm.globals.set(\"Rent_ID5foradmin\",new_rent_id);\r",
									"pm.execution.setNextRequest(\"get all rents\");\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_info\":\"67c13c0c80c27adb253d817b\",\r\n    \"startDate\":\"2030-09-14\",\r\n    \"endDate\":\"2030-09-14\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/cars/67c127dc3c252ae0fe134a77/rents/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"cars",
								"67c127dc3c252ae0fe134a77",
								"rents",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get all rents",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Admin can view all of rents\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.count).to.eql(jsonData.data.length);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.execution.setNextRequest(\"Get rents for car\");\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rents",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get rents for car",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Get single rent\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/cars/67c127dc3c252ae0fe134a77/rents",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"cars",
								"67c127dc3c252ae0fe134a77",
								"rents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get single rent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ตรวจสอบว่า status code เป็น 200 หรือไม่\r",
									"pm.test(\"Status code is 200,admin can view any rent\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.execution.setNextRequest(\"Get Single Rent(200)\");\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rents/:rent_id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents",
								":rent_id"
							],
							"variable": [
								{
									"key": "rent_id",
									"value": "{{Rent_ID3}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Rent(200)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200, Admin can view any rent\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Update rent\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rents/67c3e725e1e2bf2a352b943c",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents",
								"67c3e725e1e2bf2a352b943c"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update rent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Update rent(200)\");\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/rents/:rent_id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents",
								":rent_id"
							],
							"variable": [
								{
									"key": "rent_id",
									"value": "{{Rent_ID3}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update rent(200)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200,admin can update any rent\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Delete Single Rent1\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rents/:rent_id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents",
								":rent_id"
							],
							"variable": [
								{
									"key": "rent_id",
									"value": "{{Rent_ID5foradmin}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Single Rent1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Delete Single Rent2\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rents/:rent_id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents",
								":rent_id"
							],
							"variable": [
								{
									"key": "rent_id",
									"value": "{{Rent_ID1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Single Rent2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Delete Single Rent3\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rents/:rent_id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents",
								":rent_id"
							],
							"variable": [
								{
									"key": "rent_id",
									"value": "{{Rent_ID2}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Single Rent3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Delete Single Rent4(200)\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rents/:rent_id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents",
								":rent_id"
							],
							"variable": [
								{
									"key": "rent_id",
									"value": "{{Rent_ID3}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Single Rent4(200)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Delete Single Rent5(200)\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rents/:rent_id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents",
								":rent_id"
							],
							"variable": [
								{
									"key": "rent_id",
									"value": "{{Rent_ID4foradmin}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Single Rent5(200)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200,admin can delete for any user\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"LogOut\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rents/:rent_id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents",
								":rent_id"
							],
							"variable": [
								{
									"key": "rent_id",
									"value": "{{Rent_ID5foradmin}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LogOut",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", null);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Get Me (401)\");\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/logout",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Me (401)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/me",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"me"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Extra",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\",pm.response.json().token)\r",
									"pm.environment.set(\"User_info\", pm.response.json().User_info._id);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"get all rents\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"TestExtra@gmail.com\",\r\n    \"password\":\"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all rents",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Admin can view all of rents\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.count).to.eql(jsonData.data.length);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.execution.setNextRequest(\"Create rent(Overlapping)\");\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/rents",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create rent(Overlapping)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Update rent (Overlapping)\")\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"function getRandomDate(year) {\r",
									"    const month = Math.floor(Math.random() * 12); \r",
									"    const day = Math.floor(Math.random() * 28) + 1; \r",
									"    return new Date(year, month, day);\r",
									"}\r",
									"\r",
									"\r",
									"let startDate = getRandomDate(2025);\r",
									"\r",
									"\r",
									"let endDate = new Date(startDate);\r",
									"endDate.setDate(startDate.getDate() + Math.floor(Math.random() * 10) + 1);\r",
									"\r",
									"\r",
									"let startDateFormatted = startDate.toISOString().split('T')[0];\r",
									"let endDateFormatted = endDate.toISOString().split('T')[0];\r",
									"\r",
									"\r",
									"pm.environment.set(\"startDate\", startDateFormatted);\r",
									"pm.environment.set(\"endDate\", endDateFormatted);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_info\":\"{{User_info}}\",\r\n    \"startDate\":\"2024-10-13\",\r\n    \"endDate\":\"2024-10-14\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/cars/67c127dc3c252ae0fe134a77/rents/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"cars",
								"67c127dc3c252ae0fe134a77",
								"rents",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update rent (Overlapping)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Create rent1 (200)\");\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"startDate\":\"2024-10-11\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/rents/67c55986d56c52525949578b",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents",
								"67c55986d56c52525949578b"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create rent1 (200)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"const new_rent_id = response.data._id;\r",
									"\r",
									"pm.globals.set(\"Rent_ID1\",new_rent_id);\r",
									"\r",
									"pm.execution.setNextRequest(\"get all rents2\");\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"function getRandomDate(year) {\r",
									"    const month = Math.floor(Math.random() * 12); \r",
									"    const day = Math.floor(Math.random() * 28) + 1; \r",
									"    return new Date(year, month, day);\r",
									"}\r",
									"\r",
									"\r",
									"let startDate = getRandomDate(2025);\r",
									"\r",
									"\r",
									"let endDate = new Date(startDate);\r",
									"endDate.setDate(startDate.getDate() + Math.floor(Math.random() * 10) + 1);\r",
									"\r",
									"\r",
									"let startDateFormatted = startDate.toISOString().split('T')[0];\r",
									"let endDateFormatted = endDate.toISOString().split('T')[0];\r",
									"\r",
									"\r",
									"pm.environment.set(\"startDate\", startDateFormatted);\r",
									"pm.environment.set(\"endDate\", endDateFormatted);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_info\":\"{{User_info}}\",\r\n    \"startDate\":\"2024-10-14\",\r\n    \"endDate\":\"2024-10-14\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/cars/67c127dc3c252ae0fe134a77/rents/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"cars",
								"67c127dc3c252ae0fe134a77",
								"rents",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get all rents2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Admin can view all of rents\", function () {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.count).to.eql(jsonData.data.length);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.execution.setNextRequest(\"Delete Single Rent1\");\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rents",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Single Rent1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Login admin\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rents/:rent_id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rents",
								":rent_id"
							],
							"variable": [
								{
									"key": "rent_id",
									"value": "{{Rent_ID1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\",pm.response.json().token)\r",
									"pm.environment.set(\"User_info\", pm.response.json().User_info._id);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Get all AuditLogs\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"admin1@gmail.com\",\r\n    \"password\":\"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all AuditLogs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auditlogs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auditlogs"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}