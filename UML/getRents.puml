@startuml
actor User
participant "Express Server" as Server
participant "Rent Router" as Router
participant "Rent Controller" as Controller
participant "Rent Model" as RentModel
database "MongoDB" as DB

User -> Server: GET /api/v1/rents
Server -> Router: app.use('/api/v1/rents',rents)
Router -> Controller: getRents()

alt User is not admin
    Controller -> RentModel: find({ user_info: req.user.id }).populate(car_info, user_info)
    RentModel -> DB: RentSchema
    DB --> RentModel: return rent list
    RentModel --> Controller: return rent list
else Admin (requests all rents)
    Controller -> RentModel: find().populate(car_info, user_info)
    RentModel -> DB: RentSchema
    DB --> RentModel: return rent list
    RentModel --> Controller: return rent list
else Admin (requests rents for a specific car)
    Controller -> RentModel: find({ car_info: req.params.carId }).populate(car_info, user_info)
    RentModel -> DB: RentSchema
    DB --> RentModel: return rent list
    RentModel --> Controller: return rent list
end

Controller -> Server: return JSON response (200 OK)
Server -> User: return rent list with car details
@enduml
