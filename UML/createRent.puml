@startuml
actor User
participant "Express Server" as Server
participant "Rent Router" as Router
participant "Rent Controller" as Controller
participant "Rent Model" as RentModel
database "MongoDB" as DB

User -> Server: POST /api/v1/cars/:carId/rents/ (req.body)
Server -> Router: app.use('/api/v1/rents/:id',rents)
Router -> Controller: createRent(req.body)
Controller -> RentModel: findOne (check overlapping rents)
RentModel -> DB: RentSchema
DB --> RentModel: return existing rents
RentModel --> Controller: return existing rents

alt Car Not Found
    Controller -> Server: return JSON response (404 Not Found)
    Server -> User: return error message
else Car Found
    Controller -> RentModel: find (check user rent count)
    RentModel -> DB: RentSchema
    DB --> RentModel: return existing rents
    RentModel --> Controller: return existing rents
    alt User Exceeded Limit (>=3)
        Controller -> Server: return JSON response (400 Bad Request)
        Server -> User: return error message
    else User Allowed
        Controller -> RentModel: create(req.body)
        RentModel -> DB: RentSchema
        DB --> RentModel: return new rent
        RentModel --> Controller: return new rent
        Controller -> Server: return JSON response (200 OK)
        Server -> User: return created rent
    end
end

@enduml
