@startuml
title Create a Car

actor Admin as User
participant "Express Server" as Server
participant "Car Router" as Router
participant "Car Controller" as Controller
participant "Car Model" as CarModel
database "«MongoDB»\n:cars" as Database
participant "Provider Model" as ProviderModel
database "«MongoDB»\n:providers" as ProviderDB

User -> Server: POST /api/v1/cars
Server -> Router: app.use('/api/v1/cars', cars)
Router -> Controller: createCar(req.body)
Controller -> CarModel: findOne({ vin_plate })
alt VIN plate already exists
    Controller -> Server: Response 400 (Car with VIN already registered)
    Server -> User: Response 400 (Car with VIN already registered)
else VIN is unique
    Controller -> ProviderModel: findById(provider_info)
    ProviderModel -> ProviderDB: ProviderSchema
    ProviderDB --> ProviderModel: return Provider
    ProviderModel --> Controller: return Provider
    alt Provider exists
        Controller -> CarModel: create(req.body)
        CarModel -> Database: CarSchema
        Database --> CarModel: return created car
        CarModel --> Controller: return created car
        Controller -> Server: Response 201 (Car created)
        Server -> User: Response 201 (Car created)
    else Provider not found
        Controller -> Server: Response 400 (Provider not found)
        Server -> User: Response 400 (Provider not found)
    end
end
@enduml
